class Contact:
    def __init__(self, name, phone_number, email, address):
        self.name = name
        self.phone_number = phone_number
        self.email = email
        self.address = address

class ContactBook:
    def __init__(self):
        self.contacts = []

    def add_contact(self, contact):
        self.contacts.append(contact)
        print(f"\nContact {contact.name} added successfully.")

    def view_contact_list(self):
        print("\nContact List:")
        if not self.contacts:
            print("No contacts found.")
        else:
            for index, contact in enumerate(self.contacts, start=1):
                print(f"{index}. {contact.name} - {contact.phone_number}")

    def search_contact(self, query):
        matching_contacts = [contact for contact in self.contacts if query.lower() in contact.name.lower() or query in contact.phone_number]
        if not matching_contacts:
            print(f"No contacts found for '{query}'.")
        else:
            print("\nMatching Contacts:")
            for index, contact in enumerate(matching_contacts, start=1):
                print(f"{index}. {contact.name} - {contact.phone_number}")

    def update_contact(self, index, new_name, new_phone_number, new_email, new_address):
        if 1 <= index <= len(self.contacts):
            contact = self.contacts[index - 1]
            contact.name = new_name
            contact.phone_number = new_phone_number
            contact.email = new_email
            contact.address = new_address
            print(f"\nContact updated successfully.")
        else:
            print("Invalid contact index.")

    def delete_contact(self, index):
        if 1 <= index <= len(self.contacts):
            deleted_contact = self.contacts.pop(index - 1)
            print(f"\nContact {deleted_contact.name} deleted successfully.")
        else:
            print("Invalid contact index.")

def main():
    contact_book = ContactBook()

    while True:
        print("\n===== Contact Book =====")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == "1":
            name = input("Enter name: ")
            phone_number = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            new_contact = Contact(name, phone_number, email, address)
            contact_book.add_contact(new_contact)

        elif choice == "2":
            contact_book.view_contact_list()

        elif choice == "3":
            query = input("Enter name or phone number to search: ")
            contact_book.search_contact(query)

        elif choice == "4":
            index = int(input("Enter contact index to update: "))
            new_name = input("Enter new name: ")
            new_phone_number = input("Enter new phone number: ")
            new_email = input("Enter new email: ")
            new_address = input("Enter new address: ")
            contact_book.update_contact(index, new_name, new_phone_number, new_email, new_address)

        elif choice == "5":
            index = int(input("Enter contact index to delete: "))
            contact_book.delete_contact(index)

        elif choice == "6":
            print("Thanks for using the Contact Book. Goodbye!")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
